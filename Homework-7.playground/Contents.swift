// –Ø —Ä–µ—à–∏–ª —Å–¥–µ–ª–∞—Ç—å —Ç–µ–∫—Å—Ç –ø—Ä–æ —Å–≤–æ–∏ —Ö–æ–±–±–∏, —Ç–µ–∫—Å—Ç –ø–æ–ª—É—á–∏–ª—Å—è –Ω–µ–±–æ–ª—å—à–æ–π, –Ω–æ –æ–Ω —Ä–∞–Ω–¥–æ–º–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–¥–Ω–∏ –∏–∑ –º–æ–∏—Ö —Ö–æ–±–±–∏ –∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–≥–µ–Ω–µ–Ω—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ö–æ–±–±–∏ –æ–Ω –≤—ã–≤–æ–¥–∏—Ç —á—Ç–æ –º–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ —ç—Ç–æ–º —Ö–æ–±–±–∏
var myHobbi: String = ""

var aboutMe: [Int: String] = [1: "c—Ç—É–¥–µ–Ω—Ç–æ–º"]
let firstFactAboutMe = aboutMe[1]!

myHobbi += "–Ø —è–≤–ª—è—é—Å—å \(firstFactAboutMe) –∏ —Å–µ–π—á–∞—Å —è —Ä–∞—Å—Å–∫–∞–∂—É –æ —Å–≤–æ–∏—Ö —Ö–æ–±–±–∏."

var arrayHobbi: [String] = ["–§–∏–ª—å–º—ã", "–ò–≥—Ä—ã", "–°–µ—Ä–∏–∞–ª—ã",  "–ú—É–∑—ã–∫–∞", "–§—É—Ç–±–æ–ª", "–ê–Ω–∏–º–µ", "–ú–∞–Ω–≥–∞"]
let randomArrayhobbi = Int.random(in: 0..<arrayHobbi.count)

myHobbi += " –û–¥–Ω–∏–º –∏–∑ –º–æ–∏—Ö —Ö–æ–±–±–∏ —è–≤–ª—è–µ—Ç—Å—è \(arrayHobbi[randomArrayhobbi]). "
//randomArrayhobbi

if randomArrayhobbi == 0 {
    var favoriteFilms: Set<String> = ["–ë—ç—Ç–º–µ–Ω: –¢–µ–º–Ω—ã–π —Ä—ã—Ü–∞—Ä—å", "–í–ª–∞—Å—Ç–µ–ª–∏–Ω –ö–æ–ª–µ—Ü"]
    let film = favoriteFilms.randomElement()!
    
    myHobbi += "–ú–æ–∏ –ª—é–±–∏–º—ã–µ —Ñ–∏–ª—å–º—ã: "
    myHobbi += (["–ë—ç—Ç–º–µ–Ω: –¢–µ–º–Ω—ã–π —Ä—ã—Ü–∞—Ä—å", "–í–ª–∞—Å—Ç–µ–ª–∏–Ω –ö–æ–ª–µ—Ü"].joined(separator: ", "))
}

else if randomArrayhobbi == 1 {
    var favoriteGame: Set<String> = ["God of Var", "GTA", "–í–µ–¥—å–º–∞–∫"]
    let game = favoriteGame.randomElement()!
    
    myHobbi += "–ú–æ–∏–º–∏ —Ñ–∞–≤–æ—Ä–∏—Ç—ã –≤ –∏–≥—Ä–æ–≤–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏: "
    myHobbi += (["God of Var", "GTA", "–í–µ–¥—å–º–∞–∫"].joined(separator: ", "))
}

else if randomArrayhobbi == 2 {
    var favoriteSerial: Set<String> = ["–í–µ–¥—å–º–∞–∫"]
    let serial = favoriteSerial.randomElement()!
    
    myHobbi += "–ú–æ–π –ª—é–±–∏–º—ã–π —Å–µ—Ä–∏–∞–ª \(serial). "
}

else if randomArrayhobbi == 3 {
    var favoriteMusic: Set<String> = ["OBLADAET", "OG BUDA", "SODA LUV", "Travis Scott"]
    let music = favoriteMusic.randomElement()!
    
    myHobbi += "–ú–æ–∏ –ª—é–±–∏–º—ã–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏: "
    myHobbi += (["OBLADAET", "OG BUDA", "SODA LUV", "Travis Scott"].joined(separator: ", "))
}

else if randomArrayhobbi == 4 {
    var favoriteFootball: Set<String> = ["Levandovski", "Ronaldo", "Holand"]
    let football = favoriteFootball.randomElement()!
    
    myHobbi += "–ú–æ–∏ –ª—é–±–∏–º—ã–µ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç—ã: "
    myHobbi += (["Levandovski", "Ronaldo", "Holand"].joined(separator: ", "))
}

else if randomArrayhobbi == 5 {
    var favoriteAnime: Set<String> = ["One Piece"]
    let anime = favoriteAnime.randomElement()!
    
    myHobbi += "–ú–æ–∏–º –ª—é–±–∏–º—ã–º –∞–Ω–∏–º–µ —è–≤–ª—è–µ—Ç—Å—è \(anime). "
}

else if randomArrayhobbi == 6 {
    var favoriteManga: Set<String> = ["–ü–æ–¥–Ω—è—Ç–∏–µ —É—Ä–æ–≤–Ω—è –≤ –æ–¥–∏–Ω–æ—á–∫—É", "–ù–∞—á–∞–ª–æ –ø–æ—Å–ª–µ –∫–æ–Ω—Ü–∞"]
    let manga = favoriteManga.randomElement()!
    
    myHobbi += "–ú–æ–µ–π –ª—é–±–∏–º–æ–π –º–∞–Ω–≥–æ–π —è–≤–ª—è–µ—Ç—Å—è "
    myHobbi += (["–ü–æ–¥–Ω—è—Ç–∏–µ —É—Ä–æ–≤–Ω—è –≤ –æ–¥–∏–Ω–æ—á–∫—É", "–ù–∞—á–∞–ª–æ –ø–æ—Å–ª–µ –∫–æ–Ω—Ü–∞"].joined(separator: ", "))
}

print(myHobbi)
print()
print()
print()
// –ö–∞—Ä—Ç–æ—á–Ω–∞—è –∏–≥—Ä–∞
print("–ö–∞—Ä—Ç–æ—á–Ω–∞—è –∏–≥—Ä–∞")
// –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Ä–∞–Ω–≥ –∏ –º–∞—Å—Ç—å –∫–∞—Ä—Ç
let ranks = ["6", "7", "8", "9", "10", "J", "Q", "K", "A"]
let suits = ["‚ô†Ô∏è", "üñ§", "‚ô£Ô∏è", "‚ô¶Ô∏è"]
var deck: [(String, String)] = []

// –∑–∞–ø–æ–ª–Ω—è—é –∫–æ–ª–æ–¥—É
for rank in ranks {
    for suit in suits {
        deck.append((rank, suit))
    }
}

//–ø–µ—Ä–µ–º–µ—à–∏–≤–∞—é
deck.shuffle()

// —Å–æ–∑–¥–∞—é –¥–≤—É—Ö –∏–≥—Ä–æ–∫–æ–≤
var firstPlayer: [(String, String)] = []
var secondPlayer: [(String, String)] = []


// —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –≤ —Ö–æ–¥–µ
func canBeat(_ firstCard: (String, String), _ secondCard: (String, String)) -> Int {
    let value = ["6", "7", "8", "9", "10", "J", "Q", "K", "A"]
    if firstCard.1 == secondCard.1 && value.firstIndex(of: firstCard.0)! > value.firstIndex(of: secondCard.0)! {
        return 1 // –µ—Å–ª–∏ –∫–∞—Ä—Ç–∞ —Ö–æ–¥—è—â–µ–≥–æ –±–æ–ª—å—à–µ, —Ç–æ –æ–Ω –ø–æ–±–µ–¥–∏–ª
    }
    else if firstCard.1 == secondCard.1 && value.firstIndex(of: secondCard.0)! > value.firstIndex(of: firstCard.0)! {
        return 2 // –µ—Å–ª–∏ –∫–∞—Ä—Ç–∞ —Ö–æ–¥—è—â–µ–≥–æ –º–µ–Ω—å—à–µ, —Ç–æ –æ–Ω –ø—Ä–æ–∏–≥—Ä–∞–ª
    }
    else {
        return firstCard.1 > secondCard.1 ? 1:2 // –µ—Å–ª–∏ —É –Ω–∏—Ö –∫–∞—Ä—Ç—ã —Ä–∞–∑–Ω–æ–π –º–∞—Å—Ç–∏ –∑–Ω–∞—á–∏—Ç –ø–æ–±–µ–∂–¥–∞–µ—Ç –∏–≥—Ä–æ–∫, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –∫–∞—Ä—Ç–∞ –±–æ–ª—å—à–µ
    }
}
    
// —Ñ—É–Ω–∫—Ü–∏—è —Å–∞–º–æ–π –∏–≥—Ä—ã
func CardGame() -> Int {
    var firstPlayerIndex = 0 // –∏–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã –≤ —Ä—É–∫–µ —É –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    var secondPlayerIndex = 0 // –∏–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã –≤ —Ä—É–∫–µ —É –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    var deckIndex = 12 // –∏–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã –≤ –∫–æ–ª–æ–¥–µ
    var firstPlayerHand: [(String, String)] = []
    var secondPlayerHand: [(String, String)] = []
    var winnerInRound = 0 // 1 ‚Äì –ø–æ–±–µ–¥–∏–ª –∏–≥—Ä–æ–∫ –ø–æ–±–µ–¥–ª–∏, 2 ‚Äì –ø–æ–±–µ–¥–∏–ª –≤—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫
    
    // —Ä–∞–∑–¥–∞—é –∏–≥—Ä–æ–∫–∞–º –∫–∞—Ä—Ç—ã
    for i in 0..<6 {
        firstPlayerHand.append(deck[i])
        secondPlayerHand.append(deck[i+6])
    }
    
    // –Ω–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É
    while deckIndex < 36 {
        print("–ö–∞—Ä—Ç –≤ —Ä—É–∫–∞—Ö: \(deckIndex) / –∫–∞—Ä—Ç –≤ –∫–æ–ª–æ–¥–µ: 36") // –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç –≤ –∫–æ–ª–æ–¥–µ
        print("–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫: (–∫–∞—Ä—Ç –≤ —Ä—É–∫–µ —É –∏–≥—Ä–æ–∫–∞: \(firstPlayerHand.count): ")
        
        for card in firstPlayerHand {
            print("\(card.0) \(card.1)")
        }
        print("–í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫: (–∫–∞—Ä—Ç –≤ —Ä—É–∫–µ —É –∏–≥—Ä–æ–∫–∞: \(secondPlayerHand.count): ")
        
        for card in secondPlayerHand {
            print("\(card.0) \(card.1)")
        }
        
        // –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ö–æ–¥–∞ —É –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        let firstPlayerCard = firstPlayerHand.randomElement()!
        firstPlayerHand.removeAll(where: { $0 == firstPlayerCard })
        print("–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫  –∏–≥—Ä–∞–µ—Ç: \(firstPlayerCard.0) \(firstPlayerCard.1)")
        
        // –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ö–æ–¥–∞ —É –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        let secondPlayerCard = secondPlayerHand.randomElement()!
        secondPlayerHand.removeAll(where: { $0 == secondPlayerCard })
        print("–í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫  –∏–≥—Ä–∞–µ—Ç: \(secondPlayerCard.0) \(secondPlayerCard.1)")
        
        var roundWinner = canBeat(firstPlayerCard, secondPlayerCard)
        
        // –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –≤ —Ä–∞—É–Ω–¥–µ
        if roundWinner == 1 {
//            print("–í —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ –ø–æ–±–µ–¥—É –æ–¥–µ—Ä–∂–∞–ª –ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ üéâüéâüéâ")
            firstPlayerHand.append(secondPlayerCard)
            firstPlayerHand.append(firstPlayerCard)
        }
        else if roundWinner == 2 {
//            print("–í —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ –ø–æ–±–µ–¥—É –æ–¥–µ—Ä–∂–∞–ª –í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ üéâüéâüéâ")
            secondPlayerHand.append(firstPlayerCard)
            secondPlayerHand.append(secondPlayerCard)
        }
        else {
//            print("–í —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ –æ–¥–µ—Ä–∂–∞–ª –∏–≥—Ä–æ–∫")
        }
        // –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π –∫–∞—Ä—Ç–µ –≤ –∫–æ–ª–æ–¥–µ
        deckIndex += 1
        
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–æ–¥—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–∞—Ä—Ç
        if deckIndex == 36 {
            // –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞—É–Ω–¥
            var firstPlayerScore = firstPlayerHand.count
            var secondPlayerScore = secondPlayerHand.count
            
            while firstPlayerHand.count > 0 && secondPlayerHand.count > 0 {
                
                print("–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫: (–∫–∞—Ä—Ç –≤ —Ä—É–∫–µ —É –∏–≥—Ä–æ–∫–∞: \(firstPlayerHand.count): ")
                
                for card in firstPlayerHand {
                    print("\(card.0) \(card.1)")
                }
                print("–í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫: (–∫–∞—Ä—Ç –≤ —Ä—É–∫–µ —É –∏–≥—Ä–æ–∫–∞: \(secondPlayerHand.count): ")
                
                for card in secondPlayerHand {
                    print("\(card.0) \(card.1)")
                }
            
                let firstPlayerCard = firstPlayerHand.randomElement()!
                firstPlayerHand.removeAll(where: { $0 == firstPlayerCard })
                print("–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫  –∏–≥—Ä–∞–µ—Ç: \(firstPlayerCard.0) \(firstPlayerCard.1)")
                
                let secondPlayerCard = secondPlayerHand.randomElement()!
                secondPlayerHand.removeAll(where: { $0 == secondPlayerCard })
                print("–í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫  –∏–≥—Ä–∞–µ—Ç: \(secondPlayerCard.0) \(secondPlayerCard.1)")
                
                let roundWinner = canBeat(firstPlayerCard, secondPlayerCard)
                
                if roundWinner == 1 {
                    print("–í —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ –ø–æ–±–µ–¥—É –æ–¥–µ—Ä–∂–∞–ª –ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ üéâüéâüéâ")
                    firstPlayerHand.append(secondPlayerCard)
                    firstPlayerHand.append(firstPlayerCard)
                }
                else {
                    print("–í —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ –ø–æ–±–µ–¥—É –æ–¥–µ—Ä–∂–∞–ª –í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ üéâüéâüéâ")
                    secondPlayerHand.append(firstPlayerCard)
                    secondPlayerHand.append(secondPlayerCard)
                }
            }
            
            if firstPlayerHand.count == 0 {
//                print("–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º –≤ —ç—Ç–æ–π –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω–æ–π –∏–≥—Ä–µ")
                winnerInRound = 1
            }
            else {
//                print("–í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º –≤ —ç—Ç–æ–π –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω–æ–π –∏–≥—Ä–µ")
                winnerInRound = 2
            }
        }
    }
    return winnerInRound
}
    
let winnerOfGame = CardGame()

if winnerOfGame == 1 {
    print("–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º")
}
else {
    print("–í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º")
}
